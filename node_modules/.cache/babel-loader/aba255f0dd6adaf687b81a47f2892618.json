{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jison\\\\OneDrive\\\\Desktop\\\\digital-e-gram-panchayat\\\\src\\\\components\\\\CheckStatus.js\";\nimport React, { useEffect, useState } from 'react';\nimport { auth, db } from '../firebase';\nimport { collection, getDocs, query, where, doc, getDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nfunction CheckStatus() {\n  const [applications, setApplications] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchStatus = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        navigate('/login');\n        return;\n      }\n      try {\n        const appliedQuery = query(collection(db, 'Applied'), where('userId', '==', user.uid));\n        const appliedSnapshot = await getDocs(appliedQuery);\n        const statusPromises = appliedSnapshot.docs.map(async docSnap => {\n          const appliedData = docSnap.data();\n          const appliedId = docSnap.id;\n          const verify = appliedData.verify;\n          const applicationId = appliedData.applicationId;\n          let status = 'Just Applied';\n          if (verify) {\n            // Look for a matching CheckedApp entry\n            const checkedAppQuery = query(collection(db, 'CheckedApp'), where('applied', '==', appliedId));\n            const checkedAppSnapshot = await getDocs(checkedAppQuery);\n            if (!checkedAppSnapshot.empty) {\n              const checkedStatus = checkedAppSnapshot.docs[0].data().status;\n              status = checkedStatus === 'Conformed' ? 'Application Conformed' : 'Application forwarded to rechecking';\n            } else {\n              status = 'Application Just Viewed';\n            }\n          }\n\n          // Fetch application name using applicationId\n          let appName = 'Unknown';\n          const appDoc = await getDoc(doc(db, 'applications', applicationId));\n          if (appDoc.exists()) {\n            appName = appDoc.data().name || 'Unnamed Application';\n          }\n          return {\n            id: appliedId,\n            appName,\n            status,\n            message: appliedData.message || ''\n          };\n        });\n        const results = await Promise.all(statusPromises);\n        setApplications(results);\n      } catch (err) {\n        console.error('Error fetching status:', err);\n      }\n    };\n    fetchStatus();\n  }, [navigate]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Check Your Application Status\"), applications.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"No applications found.\") : applications.map((app, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      background: '#f9f9f9',\n      padding: '15px',\n      borderRadius: '8px',\n      marginBottom: '15px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, app.appName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }\n  }, \"Status:\"), \" \", app.status), app.message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 32\n    }\n  }, \"Message:\"), \" \", app.message))));\n}\nexport default CheckStatus;","map":{"version":3,"names":["React","useEffect","useState","auth","db","collection","getDocs","query","where","doc","getDoc","useNavigate","CheckStatus","applications","setApplications","navigate","fetchStatus","user","currentUser","appliedQuery","uid","appliedSnapshot","statusPromises","docs","map","docSnap","appliedData","data","appliedId","id","verify","applicationId","status","checkedAppQuery","checkedAppSnapshot","empty","checkedStatus","appName","appDoc","exists","name","message","results","Promise","all","err","console","error","createElement","style","padding","maxWidth","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","app","index","key","background","borderRadius","marginBottom","border"],"sources":["C:/Users/jison/OneDrive/Desktop/digital-e-gram-panchayat/src/components/CheckStatus.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from '../firebase';\r\nimport { collection, getDocs, query, where, doc, getDoc } from 'firebase/firestore';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CheckStatus() {\r\n  const [applications, setApplications] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchStatus = async () => {\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const appliedQuery = query(\r\n          collection(db, 'Applied'),\r\n          where('userId', '==', user.uid)\r\n        );\r\n        const appliedSnapshot = await getDocs(appliedQuery);\r\n\r\n        const statusPromises = appliedSnapshot.docs.map(async (docSnap) => {\r\n          const appliedData = docSnap.data();\r\n          const appliedId = docSnap.id;\r\n          const verify = appliedData.verify;\r\n          const applicationId = appliedData.applicationId;\r\n\r\n          let status = 'Just Applied';\r\n\r\n          if (verify) {\r\n            // Look for a matching CheckedApp entry\r\n            const checkedAppQuery = query(\r\n              collection(db, 'CheckedApp'),\r\n              where('applied', '==', appliedId)\r\n            );\r\n            const checkedAppSnapshot = await getDocs(checkedAppQuery);\r\n\r\n            if (!checkedAppSnapshot.empty) {\r\n              const checkedStatus = checkedAppSnapshot.docs[0].data().status;\r\n              status = checkedStatus === 'Conformed'\r\n                ? 'Application Conformed'\r\n                : 'Application forwarded to rechecking';\r\n            } else {\r\n              status = 'Application Just Viewed';\r\n            }\r\n          }\r\n\r\n          // Fetch application name using applicationId\r\n          let appName = 'Unknown';\r\n          const appDoc = await getDoc(doc(db, 'applications', applicationId));\r\n          if (appDoc.exists()) {\r\n            appName = appDoc.data().name || 'Unnamed Application';\r\n          }\r\n\r\n          return {\r\n            id: appliedId,\r\n            appName,\r\n            status,\r\n            message: appliedData.message || ''\r\n          };\r\n        });\r\n\r\n        const results = await Promise.all(statusPromises);\r\n        setApplications(results);\r\n      } catch (err) {\r\n        console.error('Error fetching status:', err);\r\n      }\r\n    };\r\n\r\n    fetchStatus();\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '800px', margin: 'auto' }}>\r\n      <h2>Check Your Application Status</h2>\r\n\r\n      {applications.length === 0 ? (\r\n        <p>No applications found.</p>\r\n      ) : (\r\n        applications.map((app, index) => (\r\n          <div key={index} style={{\r\n            background: '#f9f9f9',\r\n            padding: '15px',\r\n            borderRadius: '8px',\r\n            marginBottom: '15px',\r\n            border: '1px solid #ccc'\r\n          }}>\r\n            <h4>{app.appName}</h4>\r\n            <p><strong>Status:</strong> {app.status}</p>\r\n            {app.message && <p><strong>Message:</strong> {app.message}</p>}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}