{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jison\\\\OneDrive\\\\Desktop\\\\E panchyat\\\\src\\\\components\\\\State\\\\AdminAppliCap.js\";\n// State/AdminAppliCap.js\nimport React, { useEffect, useState } from 'react';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport AdminAppliCapUI from '../UI/AdminAppliCap';\nconst predefinedCategories = ['Complaints', 'Certificate', 'Financial Support', 'Customer Grievance', 'Water Connection', 'Electricity', 'Housing Scheme'];\nfunction AdminAppliCap() {\n  var _location$state;\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const admin = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.admin;\n  useEffect(() => {\n    if (!admin) {\n      alert('Access denied. Please login as admin.');\n      navigate('/staff-login');\n    }\n  }, [admin, navigate]);\n  const applicationsRef = collection(db, 'applications');\n  useEffect(() => {\n    const fetchData = async () => {\n      const snapshot = await getDocs(applicationsRef);\n      const apps = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setApplications(apps);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const updateLocalApplication = (index, key, value) => {\n    const updated = [...applications];\n    updated[index][key] = value;\n    setApplications(updated);\n  };\n  const addApplication = async () => {\n    const newApp = {\n      name: '',\n      message: '',\n      category: predefinedCategories[0],\n      status: 'Offline'\n    };\n    const docRef = await addDoc(applicationsRef, newApp);\n    setApplications([...applications, {\n      id: docRef.id,\n      ...newApp\n    }]);\n  };\n  const saveApplication = async index => {\n    const app = applications[index];\n    const appRef = doc(db, 'applications', app.id);\n    await updateDoc(appRef, {\n      name: app.name,\n      message: app.message,\n      category: app.category,\n      status: app.status\n    });\n    alert('Application updated successfully.');\n  };\n  const deleteApplication = async index => {\n    const app = applications[index];\n    const appRef = doc(db, 'applications', app.id);\n    await deleteDoc(appRef);\n    const updated = applications.filter((_, i) => i !== index);\n    setApplications(updated);\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(AdminAppliCapUI, {\n    applications: applications,\n    predefinedCategories: predefinedCategories,\n    updateLocalApplication: updateLocalApplication,\n    saveApplication: saveApplication,\n    deleteApplication: deleteApplication,\n    addApplication: addApplication,\n    admin: admin,\n    navigate: navigate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  });\n}\nexport default AdminAppliCap;","map":{"version":3,"names":["React","useEffect","useState","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","db","useNavigate","useLocation","AdminAppliCapUI","predefinedCategories","AdminAppliCap","_location$state","applications","setApplications","loading","setLoading","navigate","location","admin","state","alert","applicationsRef","fetchData","snapshot","apps","docs","map","id","data","updateLocalApplication","index","key","value","updated","addApplication","newApp","name","message","category","status","docRef","saveApplication","app","appRef","deleteApplication","filter","_","i","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/jison/OneDrive/Desktop/E panchyat/src/components/State/AdminAppliCap.js"],"sourcesContent":["// State/AdminAppliCap.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc\r\n} from 'firebase/firestore';\r\nimport { db } from '../../firebase';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport AdminAppliCapUI from '../UI/AdminAppliCap';\r\n\r\nconst predefinedCategories = [\r\n  'Complaints',\r\n  'Certificate',\r\n  'Financial Support',\r\n  'Customer Grievance',\r\n  'Water Connection',\r\n  'Electricity',\r\n  'Housing Scheme'\r\n];\r\n\r\nfunction AdminAppliCap() {\r\n  const [applications, setApplications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const admin = location.state?.admin;\r\n\r\n  useEffect(() => {\r\n    if (!admin) {\r\n      alert('Access denied. Please login as admin.');\r\n      navigate('/staff-login');\r\n    }\r\n  }, [admin, navigate]);\r\n\r\n  const applicationsRef = collection(db, 'applications');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const snapshot = await getDocs(applicationsRef);\r\n      const apps = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setApplications(apps);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const updateLocalApplication = (index, key, value) => {\r\n    const updated = [...applications];\r\n    updated[index][key] = value;\r\n    setApplications(updated);\r\n  };\r\n\r\n  const addApplication = async () => {\r\n    const newApp = {\r\n      name: '',\r\n      message: '',\r\n      category: predefinedCategories[0],\r\n      status: 'Offline'\r\n    };\r\n    const docRef = await addDoc(applicationsRef, newApp);\r\n    setApplications([...applications, { id: docRef.id, ...newApp }]);\r\n  };\r\n\r\n  const saveApplication = async (index) => {\r\n    const app = applications[index];\r\n    const appRef = doc(db, 'applications', app.id);\r\n    await updateDoc(appRef, {\r\n      name: app.name,\r\n      message: app.message,\r\n      category: app.category,\r\n      status: app.status\r\n    });\r\n    alert('Application updated successfully.');\r\n  };\r\n\r\n  const deleteApplication = async (index) => {\r\n    const app = applications[index];\r\n    const appRef = doc(db, 'applications', app.id);\r\n    await deleteDoc(appRef);\r\n    const updated = applications.filter((_, i) => i !== index);\r\n    setApplications(updated);\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <AdminAppliCapUI\r\n      applications={applications}\r\n      predefinedCategories={predefinedCategories}\r\n      updateLocalApplication={updateLocalApplication}\r\n      saveApplication={saveApplication}\r\n      deleteApplication={deleteApplication}\r\n      addApplication={addApplication}\r\n      admin={admin}\r\n      navigate={navigate}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AdminAppliCap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}